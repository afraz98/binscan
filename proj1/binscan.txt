.text
0x55dce334c360
0x8a0
Section length: 0x302

(nil): xor		ebp, ebp
0x2: mov		r9, rdx
0x5: pop		rsi
0x6: mov		rdx, rsp
0x9: and		rsp, 0xfffffffffffffff0
0xd: push		rax
0xe: push		rsp
0xf: lea		r8, qword ptr [rip + 0x2ea]
0x16: lea		rcx, qword ptr [rip + 0x273]
0x1d: lea		rdi, qword ptr [rip + 0x14e]
0x24: call		qword ptr [rip + 0x200716]
0x2a: hlt		
0x2b: nop		dword ptr [rax + rax]
0x30: lea		rdi, qword ptr [rip + 0x200739]
0x37: push		rbp
0x38: lea		rax, qword ptr [rip + 0x200731]
0x3f: cmp		rax, rdi
0x42: mov		rbp, rsp
0x45: je		0x60
0x47: mov		rax, qword ptr [rip + 0x2006fa]
0x4e: test		rax, rax
0x51: je		0x60
0x53: pop		rbp
0x54: jmp		rax
0x56: nop		word ptr cs:[rax + rax]
0x60: pop		rbp
0x61: ret		
0x62: nop		dword ptr [rax]
0x66: nop		word ptr cs:[rax + rax]
0x70: lea		rdi, qword ptr [rip + 0x2006f9]
0x77: lea		rsi, qword ptr [rip + 0x2006f2]
0x7e: push		rbp
0x7f: sub		rsi, rdi
0x82: mov		rbp, rsp
0x85: sar		rsi, 3
0x89: mov		rax, rsi
0x8c: shr		rax, 0x3f
0x90: add		rsi, rax
0x93: sar		rsi, 1
0x96: je		0xb0
0x98: mov		rax, qword ptr [rip + 0x2006b1]
0x9f: test		rax, rax
0xa2: je		0xb0
0xa4: pop		rbp
0xa5: jmp		rax
0xa7: nop		word ptr [rax + rax]
0xb0: pop		rbp
0xb1: ret		
0xb2: nop		dword ptr [rax]
0xb6: nop		word ptr cs:[rax + rax]
0xc0: cmp		byte ptr [rip + 0x2006a9], 0
0xc7: jne		0xf8
0xc9: cmp		qword ptr [rip + 0x200687], 0
0xd1: push		rbp
0xd2: mov		rbp, rsp
0xd5: je		0xe3
0xd7: mov		rdi, qword ptr [rip + 0x20068a]
0xde: call		0xfffffffffffffff0
0xe3: call		0x30
0xe8: mov		byte ptr [rip + 0x200681], 1
0xef: pop		rbp
0xf0: ret		
0xf1: nop		dword ptr [rax]
0xf8: ret		
0xfa: nop		word ptr [rax + rax]
0x100: push		rbp
0x101: mov		rbp, rsp
0x104: pop		rbp
0x105: jmp		0x70
0x10a: push		rbp
0x10b: mov		rbp, rsp
0x10e: sub		rsp, 0x20
0x112: mov		dword ptr [rbp - 0x14], edi
0x115: mov		qword ptr [rbp - 0x20], rsi
0x119: lea		rdi, qword ptr [rip + 0x1f4]
0x120: mov		eax, 0
0x125: call		0xffffffffffffff50
0x12a: mov		dword ptr [rbp - 4], 0
0x131: jmp		0x15d
0x133: mov		eax, dword ptr [rbp - 4]
0x136: movsxd		rdx, eax
0x139: mov		rax, qword ptr [rbp - 0x20]
0x13d: add		rax, rdx
0x140: movzx		eax, byte ptr [rax]
0x143: movzx		eax, al
0x146: mov		esi, eax
0x148: lea		rdi, qword ptr [rip + 0x1cc]
0x14f: mov		eax, 0
0x154: call		0xffffffffffffff50
0x159: add		dword ptr [rbp - 4], 1
0x15d: mov		eax, dword ptr [rbp - 4]
0x160: cmp		eax, dword ptr [rbp - 0x14]
0x163: jl		0x133
0x165: mov		edi, 0xa
0x16a: call		0xffffffffffffff70
0x16f: nop		
0x170: leave		
0x171: ret		
0x172: push		rbp
0x173: mov		rbp, rsp
0x176: sub		rsp, 0x90
0x17d: mov		rax, qword ptr fs:[0x28]
0x186: mov		qword ptr [rbp - 8], rax
0x18a: xor		eax, eax
0x18c: movabs		rax, 0x73654d2074736554
0x196: mov		qword ptr [rbp - 0x5e], rax
0x19a: mov		dword ptr [rbp - 0x56], 0x65676173
0x1a1: mov		word ptr [rbp - 0x52], 0xa
0x1a7: movabs		rax, 0x6f57206f6c6c6548
0x1b1: mov		qword ptr [rbp - 0x6b], rax
0x1b5: mov		dword ptr [rbp - 0x63], 0xa646c72
0x1bc: mov		byte ptr [rbp - 0x5f], 0
0x1c0: mov		esi, 0
0x1c5: mov		edi, 8
0x1ca: call		0xffffffffffffffe0
0x1cf: lea		rdi, qword ptr [rip + 0x14a]
0x1d6: call		0xffffffffffffff80
0x1db: mov		qword ptr [rbp - 0x80], rax
0x1df: call		0xffffffffffffffc0
0x1e4: mov		qword ptr [rbp - 0x78], rax
0x1e8: mov		rcx, qword ptr [rbp - 0x80]
0x1ec: mov		rax, qword ptr [rbp - 0x78]
0x1f0: mov		edx, 0
0x1f5: mov		rsi, rcx
0x1f8: mov		rdi, rax
0x1fb: call		0xffffffffffffff40
0x200: lea		rax, qword ptr [rbp - 0x5e]
0x204: mov		rdi, rax
0x207: call		0xffffffffffffffb0
0x20c: mov		rdx, rax
0x20f: lea		rcx, qword ptr [rbp - 0x5e]
0x213: mov		rax, qword ptr [rbp - 0x78]
0x217: mov		rsi, rcx
0x21a: mov		rdi, rax
0x21d: call		0xffffffffffffff90
0x222: lea		rax, qword ptr [rbp - 0x6b]
0x226: mov		rdi, rax
0x229: call		0xffffffffffffffb0
0x22e: mov		rdx, rax
0x231: lea		rcx, qword ptr [rbp - 0x6b]
0x235: mov		rax, qword ptr [rbp - 0x78]
0x239: mov		rsi, rcx
0x23c: mov		rdi, rax
0x23f: call		0xffffffffffffff90
0x244: lea		rdx, qword ptr [rbp - 0x84]
0x24b: lea		rcx, qword ptr [rbp - 0x50]
0x24f: mov		rax, qword ptr [rbp - 0x78]
0x253: mov		rsi, rcx
0x256: mov		rdi, rax
0x259: call		0xffffffffffffffa0
0x25e: mov		rax, qword ptr [rbp - 0x78]
0x262: mov		rdi, rax
0x265: call		0xffffffffffffffd0
0x26a: mov		eax, dword ptr [rbp - 0x84]
0x270: lea		rdx, qword ptr [rbp - 0x50]
0x274: mov		rsi, rdx
0x277: mov		edi, eax
0x279: call		0x10a
0x27e: nop		
0x27f: mov		edi, 0
0x284: call		0xffffffffffffff60
0x289: nop		dword ptr [rax]
0x290: push		r15
0x292: push		r14
0x294: mov		r15, rdx
0x297: push		r13
0x299: push		r12
0x29b: lea		r12, qword ptr [rip + 0x200216]
0x2a2: push		rbp
0x2a3: lea		rbp, qword ptr [rip + 0x200216]
0x2aa: push		rbx
0x2ab: mov		r13d, edi
0x2ae: mov		r14, rsi
0x2b1: sub		rbp, r12
0x2b4: sub		rsp, 8
0x2b8: sar		rbp, 3
0x2bc: call		0xffffffffffffff10
0x2c1: test		rbp, rbp
0x2c4: je		0x2e6
0x2c6: xor		ebx, ebx
0x2c8: nop		dword ptr [rax + rax]
0x2d0: mov		rdx, r15
0x2d3: mov		rsi, r14
0x2d6: mov		edi, r13d
0x2d9: call		qword ptr [r12 + rbx*8]
0x2dd: add		rbx, 1
0x2e1: cmp		rbp, rbx
0x2e4: jne		0x2d0
0x2e6: add		rsp, 8
0x2ea: pop		rbx
0x2eb: pop		rbp
0x2ec: pop		r12
0x2ee: pop		r13
0x2f0: pop		r14
0x2f2: pop		r15
0x2f4: ret		
0x2f5: nop		
0x2f6: nop		word ptr cs:[rax + rax]
0x300: ret		
